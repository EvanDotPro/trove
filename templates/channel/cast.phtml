<!DOCTYPE html>
<html>
  <head>
    <style type="text/css">
      body, html {
        margin: 0;
        padding: 0;
        height: 100%;
        overflow:hidden;
      }
      #video-player {
          width: 100%;
          height: 100%;
      }
.vjs-iframe-blocker {
display: none;
}
    </style>
    <title>Google Cast Receiver</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/video.js/5.13.2/alt/video-js-cdn.min.css">

    <script src="https://www.gstatic.com/cast/js/receiver/1.0/cast_receiver.js">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/video.js/5.13.2/video.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/videojs-youtube/2.1.1/Youtube.js"></script>
    <script type="text/javascript" src="/player.js"></script>
  </head>
  <body>

<video
autoplay
id="video-player"
class="video-js vjs-big-play-centered"
width="auto" height="auto"
data-setup='{ "techOrder": ["youtube"], "sources": [{ "type": "video/youtube", "src": "https://www.youtube.com/watch?v=K4vyRvMASPU"}], "youtube": {"iv_load_policy": 3, "playsinline": 1, "enablecastapi": 0}, "fluide": true }'>
</video>

<script>
    var player;

$(document).ready(function() {
    videojs("video-player").ready(function(){
        player = new TvPlayer(this);
    });
});
      window.onload = function() {
        cast.receiver.logger.setLevelValue(cast.receiver.LoggerLevel.DEBUG);
        window.castReceiverManager = cast.receiver.CastReceiverManager.getInstance();
        console.log('Starting Receiver Manager');
        
        // handler for the 'ready' event
        castReceiverManager.onReady = function(event) {
          console.log('Received Ready event: ' + JSON.stringify(event.data));
          window.castReceiverManager.setApplicationState("Application status is ready...");
        };
        
        // handler for 'senderconnected' event
        castReceiverManager.onSenderConnected = function(event) {
          console.log('Received Sender Connected event: ' + event.data);
          console.log(window.castReceiverManager.getSender(event.data).userAgent);
        };
        
        // handler for 'senderdisconnected' event
        castReceiverManager.onSenderDisconnected = function(event) {
          console.log('Received Sender Disconnected event: ' + event.data);
          if (window.castReceiverManager.getSenders().length == 0) {
	        window.close();
	      }
        };
        
        // handler for 'systemvolumechanged' event
        castReceiverManager.onSystemVolumeChanged = function(event) {
          console.log('Received System Volume Changed event: ' + event.data['level'] + ' ' +
              event.data['muted']);
        };

        // create a CastMessageBus to handle messages for a custom namespace
        window.messageBus =
          window.castReceiverManager.getCastMessageBus(
              'urn:x-cast:com.roave.tv.control');

        // handler for the CastMessageBus message event
        window.messageBus.onMessage = function(event) {
          console.log('Message [' + event.senderId + ']: ' + event.data);
          data = JSON.parse(event.data);
          player.setChannel(data.channel);
          setTimeout(function(){
              player.playNextVideo();
          }, 1000);
          // display the message from the sender
          //displayText(event.data);
          // inform all senders on the CastMessageBus of the incoming message event
          // sender message listener will be invoked
          window.messageBus.send(event.senderId, event.data);
        }

        // initialize the CastReceiverManager with an application status message
        window.castReceiverManager.start({statusText: "Application is starting"});
        console.log('Receiver Manager started');
      };
      
      // utility function to display the text message in the input field
      function displayText(text) {
        console.log(text);
        //document.getElementById("message").innerHTML=text;
        window.castReceiverManager.setApplicationState(text);
      };
    </script>
  </body>
</html>
